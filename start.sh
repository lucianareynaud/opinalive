#!/bin/bash

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ Iniciando setup do Opina...${NC}\n"

# Verifica se Python 3.11 est√° instalado
if ! command -v python3.11 &> /dev/null; then
    echo -e "${RED}‚ùå Python 3.11 n√£o encontrado. Por favor, instale o Python 3.11${NC}"
    exit 1
fi

# Verifica se estamos no diret√≥rio correto (deve ter app/ e requirements.txt)
if [ ! -d "app" ] || [ ! -f "requirements.txt" ]; then
    echo -e "${RED}‚ùå Execute este script do diret√≥rio raiz do projeto${NC}"
    exit 1
fi

# Verifica se .env existe
if [ ! -f ".env" ]; then
    echo -e "${RED}‚ùå Arquivo .env n√£o encontrado${NC}"
    echo -e "${YELLOW}‚ÑπÔ∏è  Crie o arquivo .env baseado no env.template${NC}"
    exit 1
fi

# Cria ambiente virtual se n√£o existir
if [ ! -d ".venv" ]; then
    echo -e "${YELLOW}üî® Criando ambiente virtual...${NC}"
    python3.11 -m venv .venv
fi

# Ativa o ambiente virtual
echo -e "${YELLOW}üî® Ativando ambiente virtual...${NC}"
source .venv/bin/activate

# Atualiza pip
echo -e "${YELLOW}üî® Atualizando pip...${NC}"
python -m pip install --upgrade pip

# Instala/atualiza depend√™ncias
echo -e "${YELLOW}üî® Instalando/atualizando depend√™ncias...${NC}"
pip install -r requirements.txt

# Verifica se todas as vari√°veis de ambiente necess√°rias est√£o definidas
echo -e "${YELLOW}üîç Verificando vari√°veis de ambiente...${NC}"
required_vars=(
    "DATABASE_URL"
    "OPENAI_API_KEY"
    "JWT_SECRET"
)

missing_vars=0
for var in "${required_vars[@]}"; do
    if ! grep -q "^${var}=" .env || [ -z "$(grep "^${var}=" .env | cut -d'=' -f2)" ]; then
        echo -e "${RED}‚ùå Vari√°vel $var n√£o encontrada ou vazia no .env${NC}"
        missing_vars=1
    fi
done

if [ $missing_vars -eq 1 ]; then
    echo -e "${RED}‚ùå Configure todas as vari√°veis de ambiente necess√°rias no .env${NC}"
    exit 1
fi

# Inicia a aplica√ß√£o
echo -e "\n${GREEN}‚úÖ Setup completo! Iniciando a aplica√ß√£o...${NC}\n"
python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload 