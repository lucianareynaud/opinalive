# ==============================================
# CONFIGURAÇÃO LOCAL - OPINA.LIVE
# ==============================================

# Aplicação
APP_NAME="Opina"
APP_VERSION="2.0.0"
DEBUG=True
ENVIRONMENT="development"
LOG_LEVEL="INFO"

# Segurança
SECRET_KEY="your-super-secret-key-here-change-this-in-production"
SESSION_SECRET_KEY="your-session-secret-key-here-change-this-in-production"
CORS_ORIGINS="http://localhost:8000,http://127.0.0.1:8000"

# ==============================================
# BANCO DE DADOS - NEON
# ==============================================
# ✅ CONFIGURADO - Projeto: Opina (São Paulo, AWS)
DATABASE_URL="postgresql://neondb_owner:npg_d2rLtTWMVys6@ep-curly-credit-ac7xbza9-pooler.sa-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"

# ==============================================
# STRIPE - PAGAMENTOS
# ==============================================
# Dashboard: https://dashboard.stripe.com/test/apikeys
STRIPE_PUBLISHABLE_KEY="pk_test_..."
STRIPE_SECRET_KEY="sk_test_..."
STRIPE_WEBHOOK_SECRET="whsec_..."

# ==============================================
# OPENAI - TRANSCRIÇÃO
# ==============================================
# Dashboard: https://platform.openai.com/api-keys
OPENAI_API_KEY="sk-..."
OPENAI_MODEL="whisper-1"

# ==============================================
# WEBHOOKS PERSONALIZADOS (OPCIONAL)
# ==============================================
# URLs para receber notificações de novos feedbacks
CUSTOM_WEBHOOK_URL=""
WEBHOOK_SECRET="opina_2025_secure_key"

# ==============================================
# GOOGLE OAUTH - AUTENTICAÇÃO
# ==============================================
# Dashboard: https://console.cloud.google.com/apis/credentials
# Configurar: Authorized redirect URIs = http://localhost:8000/auth/google/callback
GOOGLE_CLIENT_ID="your-google-client-id-here"
GOOGLE_CLIENT_SECRET="your-google-client-secret-here"

# ==============================================
# TWILIO - WHATSAPP (OPCIONAL)
# ==============================================
# Dashboard: https://console.twilio.com/
TWILIO_ACCOUNT_SID="AC..."
TWILIO_AUTH_TOKEN="..."
TWILIO_PHONE_NUMBER="+14155238886"

# ==============================================
# CLOUDFLARE R2 - STORAGE (OPCIONAL)
# ==============================================
# Dashboard: https://dash.cloudflare.com/
CLOUDFLARE_R2_ENDPOINT="https://..."
CLOUDFLARE_R2_ACCESS_KEY_ID="..."
CLOUDFLARE_R2_SECRET_ACCESS_KEY="..."
CLOUDFLARE_R2_BUCKET_NAME="opina-audio"
CLOUDFLARE_R2_PUBLIC_URL="https://..."

# ==============================================
# BUSINESS RULES
# ==============================================
FREE_PLAN_AUDIO_LIMIT=10
PRO_PLAN_AUDIO_LIMIT=100
ENTERPRISE_PLAN_AUDIO_LIMIT=1000

# ==============================================
# RATE LIMITING
# ==============================================
REDIS_URL="redis://localhost:6379"
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# =========================================
# OPINA - CONFIGURAÇÃO LOCAL COMPLETA
# =========================================

# === BÁSICO ===
HOST=localhost
PORT=8000
DOMAIN=localhost:8000

# === TWILIO (OPCIONAL) ===
# Necessário apenas se usar WhatsApp
# Obter em: https://console.twilio.com/
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=your-twilio-phone-number

# === CLOUDFLARE R2 (OPCIONAL) ===
# Necessário apenas se usar storage de arquivos
# Obter em: https://dash.cloudflare.com/
R2_ACCOUNT_ID=your-r2-account-id
R2_ACCESS_KEY_ID=your-r2-access-key-id
R2_SECRET_ACCESS_KEY=your-r2-secret-access-key
R2_BUCKET_NAME=your-r2-bucket-name

# === STRIPE (OPCIONAL) ===
# Necessário apenas para pagamentos
# Obter em: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=your-stripe-webhook-secret

# =========================================
# PRÓXIMOS PASSOS:
# =========================================
# 1. Configurar Google OAuth (obrigatório)
# 2. Configurar Neon Database (já configurado)
# 3. Configurar OpenAI (obrigatório para transcrição)
# 4. Testar sistema de autenticação
# 5. Configurar outros serviços conforme necessário 